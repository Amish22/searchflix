{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amish\\\\OneDrive\\\\Desktop\\\\myMovieApp\\\\src\\\\Components\\\\FilmsGrid.js\";\nimport React, { Component } from \"react\";\nimport { DataView, DataViewLayoutOptions } from \"primereact/dataview\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport YearInput from \"./YearInput\";\nimport GridItem from \"./GridItem\";\nimport ListItem from \"./ListItem\";\nimport ItemDetails from \"./ItemDetails\";\nexport default class FilmsGrid extends Component {\n  constructor() {\n    super();\n\n    this.fetchData = pageNumber => {\n      return fetch(`http://www.omdbapi.com/?s=${this.props.title}&apikey=7de47267&page=${pageNumber}&y=${this.props.year}&type=${\"movie\"}`).then(resp => resp).then(resp => resp.json()).then(response => {\n        if (response.totalRecords < 10) this.rows = response.totalRecordes;else this.rows = 10;\n        this.datasource = response.Search;\n        this.setState({\n          totalRecords: Number(response.totalResults),\n          products: this.datasource,\n          loading: false\n        });\n      });\n    };\n\n    this.openDetails = filmId => {\n      this.setState({\n        itemDetailsIsOpen: true,\n        selectedFilmId: filmId\n      });\n    };\n\n    this.close_details = () => {\n      this.setState({\n        itemDetailsIsOpen: false\n      });\n    };\n\n    this.state = {\n      products: null,\n      layout: \"grid\",\n      loading: true,\n      first: 0,\n      totalRecords: 0,\n      itemDetailsIsOpen: false\n    };\n    this.rows = 10;\n    this.itemTemplate = this.itemTemplate.bind(this);\n    this.onPage = this.onPage.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.fetchData(1);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.title !== this.props.title || prevProps.year !== this.props.year || prevProps.searchType !== this.props.searchType) {\n      setTimeout(() => {\n        this.fetchData(1);\n      }, 1000);\n    }\n  }\n\n  ///pagination controls\n  onPage(event) {\n    this.setState({\n      first: event.first\n    }); // fetch data need page number to calculate we get index of first element in page\n    // divided be number of elemnt in each page add one because it starts from 0\n\n    this.fetchData(event.first / this.rows + 1);\n  } // render as list or grid\n\n\n  itemTemplate(product, layout) {\n    if (!product) {\n      return \"\";\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, layout === \"list\" ? /*#__PURE__*/React.createElement(ListItem, {\n      data: product,\n      openDetails: this.openDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(GridItem, {\n      data: product,\n      openDetails: this.openDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  renderHeader() {\n    let onOptionChange = e => {\n      this.setState({\n        loading: true\n      }, () => {\n        setTimeout(() => {\n          this.setState({\n            loading: false,\n            layout: e.value\n          });\n        }, 1000);\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DataViewLayoutOptions, {\n      layout: this.state.layout,\n      onChange: onOptionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-2\",\n      style: {\n        marginLeft: \"-3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(YearInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  render() {\n    const header = this.renderHeader();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dataview-demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DataView, {\n      value: this.state.products,\n      layout: this.state.layout,\n      header: header,\n      itemTemplate: this.itemTemplate,\n      lazy: true,\n      paginator: true,\n      paginatorPosition: \"both\",\n      rows: this.rows,\n      totalRecords: this.state.totalRecords,\n      first: this.state.first,\n      onPage: this.onPage,\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(ItemDetails, {\n      close_details: this.close_details,\n      itemDetailsIsOpen: this.state.itemDetailsIsOpen,\n      selectedFilmId: this.state.selectedFilmId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amish/OneDrive/Desktop/myMovieApp/src/Components/FilmsGrid.js"],"names":["React","Component","DataView","DataViewLayoutOptions","YearInput","GridItem","ListItem","ItemDetails","FilmsGrid","constructor","fetchData","pageNumber","fetch","props","title","year","then","resp","json","response","totalRecords","rows","totalRecordes","datasource","Search","setState","Number","totalResults","products","loading","openDetails","filmId","itemDetailsIsOpen","selectedFilmId","close_details","state","layout","first","itemTemplate","bind","onPage","componentDidMount","setTimeout","componentDidUpdate","prevProps","searchType","event","product","renderHeader","onOptionChange","e","value","textAlign","marginLeft","render","header"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DataView, DataViewLayoutOptions } from \"primereact/dataview\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport YearInput from \"./YearInput\";\nimport GridItem from \"./GridItem\";\nimport ListItem from \"./ListItem\";\nimport ItemDetails from \"./ItemDetails\";\n\nexport default class FilmsGrid extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: null,\n      layout: \"grid\",\n      loading: true,\n      first: 0,\n      totalRecords: 0,\n      itemDetailsIsOpen: false,\n    };\n    this.rows = 10;\n\n    this.itemTemplate = this.itemTemplate.bind(this);\n    this.onPage = this.onPage.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.fetchData(1);\n    }, 1000);\n  }\n  componentDidUpdate(prevProps) {\n \n    if (\n      prevProps.title !== this.props.title ||\n      prevProps.year !== this.props.year ||\n      prevProps.searchType !== this.props.searchType\n    ) {\n   \n      setTimeout(() => {\n        this.fetchData(1);\n      }, 1000);\n    }\n  }\n  fetchData = (pageNumber) => {\n    return fetch(\n      `http://www.omdbapi.com/?s=${this.props.title}&apikey=7de47267&page=${pageNumber}&y=${this.props.year}&type=${\"movie\"}`\n    )\n      .then((resp) => resp)\n      .then((resp) => resp.json())\n      .then((response) => {\n     \n        if (response.totalRecords < 10) this.rows = response.totalRecordes;\n        else this.rows = 10;\n        this.datasource = response.Search;\n        this.setState({\n          totalRecords: Number(response.totalResults),\n          products: this.datasource,\n          loading: false,\n        });\n      });\n  };\n\n  // codes related to open film details\n  openDetails = (filmId) => {\n\n    this.setState({\n      itemDetailsIsOpen: true,\n      selectedFilmId: filmId,\n    });\n  };\n  close_details = () => {\n    this.setState({\n      itemDetailsIsOpen: false,\n    });\n  };\n  ///pagination controls\n  onPage(event) {\n    this.setState({\n      first: event.first,\n    });\n    // fetch data need page number to calculate we get index of first element in page\n    // divided be number of elemnt in each page add one because it starts from 0\n\n    this.fetchData(event.first / this.rows + 1);\n  }\n// render as list or grid\n  itemTemplate(product, layout) {\n    if (!product) {\n      return \"\";\n    }\n    return (\n      <>\n        {layout === \"list\" ? (\n          <ListItem data={product} openDetails={this.openDetails} />\n        ) : (\n          <GridItem data={product} openDetails={this.openDetails} />\n        )}\n      </>\n    );\n  }\n\n  renderHeader() {\n    let onOptionChange = (e) => {\n      this.setState({ loading: true }, () => {\n        setTimeout(() => {\n          this.setState({\n            loading: false,\n            layout: e.value,\n          });\n        }, 1000);\n      });\n    };\n\n    return (\n      <div className=\"p-grid\">\n        <div className=\"p-col-1\">\n          <div style={{ textAlign: \"left\" }}>\n            <DataViewLayoutOptions\n              layout={this.state.layout}\n              onChange={onOptionChange}\n            />\n          </div>\n        </div>\n        <div className=\"p-col-2\" style={{ marginLeft: \"-3%\" }}>\n          <YearInput />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const header = this.renderHeader();\n\n    return (\n      <>\n        <div className=\"dataview-demo\">\n          <div className=\"card\">\n            <DataView\n              value={this.state.products}\n              layout={this.state.layout}\n              header={header}\n              itemTemplate={this.itemTemplate}\n              lazy\n              paginator\n              paginatorPosition={\"both\"}\n              rows={this.rows}\n              totalRecords={this.state.totalRecords}\n              first={this.state.first}\n              onPage={this.onPage}\n              loading={this.state.loading}\n            />\n          </div>\n        </div>\n\n        <ItemDetails\n          close_details={this.close_details}\n          itemDetailsIsOpen={this.state.itemDetailsIsOpen}\n          selectedFilmId={this.state.selectedFilmId}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}