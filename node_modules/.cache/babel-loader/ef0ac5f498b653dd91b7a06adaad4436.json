{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amish\\\\OneDrive\\\\Desktop\\\\searchflix\\\\src\\\\Components\\\\FilmsGrid.js\";\nimport React, { Component } from \"react\";\nimport { DataView, DataViewLayoutOptions } from \"primereact/dataview\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport MovieBox from \"./MovieBox\";\nimport Modal from \"./Modal\";\nexport default class FilmsGrid extends Component {\n  constructor() {\n    super();\n\n    this.fetchData = pageNumber => {\n      return fetch(`http://www.omdbapi.com/?s=${this.props.title}&apikey=7de47267&page=${pageNumber}&y=${this.props.year}&type=${\"movie\"}`).then(resp => resp).then(resp => resp.json()).then(response => {\n        if (response.totalRecords < 10) this.rows = response.totalRecordes;else this.rows = 10;\n        this.datasource = response.Search;\n        this.setState({\n          totalRecords: Number(response.totalResults),\n          products: this.datasource,\n          loading: false\n        });\n      });\n    };\n\n    this.openDetails = filmId => {\n      this.setState({\n        itemDetailsIsOpen: true,\n        selectedFilmId: filmId\n      });\n    };\n\n    this.close_details = () => {\n      this.setState({\n        itemDetailsIsOpen: false\n      });\n    };\n\n    this.state = {\n      products: null,\n      layout: \"grid\",\n      loading: true,\n      first: 0,\n      totalRecords: 0,\n      ModalIsOpen: false\n    };\n    this.rows = 10;\n    this.itemTemplate = this.itemTemplate.bind(this);\n    this.onPage = this.onPage.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.fetchData(1);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.title !== this.props.title || prevProps.year !== this.props.year || prevProps.searchType !== this.props.searchType) {\n      setTimeout(() => {\n        this.fetchData(1);\n      }, 1000);\n    }\n  }\n\n  ///pagination controls\n  onPage(event) {\n    this.setState({\n      first: event.first\n    }); // fetch data need page number to calculate we get index of first element in page\n    // divided be number of elemnt in each page add one because it starts from 0\n\n    this.fetchData(event.first / this.rows + 1);\n  } // render as grid\n\n\n  itemTemplate(product, layout) {\n    if (!product) {\n      return \"\";\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MovieBox, {\n      data: product,\n      openDetails: this.openDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  renderHeader() {}\n\n  render() {\n    const header = this.renderHeader();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dataview-demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        backgroundColor: \"#001a33\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DataView, {\n      value: this.state.products,\n      layout: this.state.layout,\n      header: header,\n      itemTemplate: this.itemTemplate,\n      lazy: true,\n      paginator: true,\n      paginatorPosition: \"bottom\",\n      rows: this.rows,\n      totalRecords: this.state.totalRecords,\n      first: this.state.first,\n      onPage: this.onPage,\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(ItemDetails, {\n      close_details: this.close_details,\n      itemDetailsIsOpen: this.state.itemDetailsIsOpen,\n      selectedFilmId: this.state.selectedFilmId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amish/OneDrive/Desktop/searchflix/src/Components/FilmsGrid.js"],"names":["React","Component","DataView","DataViewLayoutOptions","MovieBox","Modal","FilmsGrid","constructor","fetchData","pageNumber","fetch","props","title","year","then","resp","json","response","totalRecords","rows","totalRecordes","datasource","Search","setState","Number","totalResults","products","loading","openDetails","filmId","itemDetailsIsOpen","selectedFilmId","close_details","state","layout","first","ModalIsOpen","itemTemplate","bind","onPage","componentDidMount","setTimeout","componentDidUpdate","prevProps","searchType","event","product","renderHeader","render","header","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DataView, DataViewLayoutOptions } from \"primereact/dataview\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport MovieBox from \"./MovieBox\";\nimport Modal from \"./Modal\";\n\nexport default class FilmsGrid extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: null,\n      layout: \"grid\",\n      loading: true,\n      first: 0,\n      totalRecords: 0,\n      ModalIsOpen: false,\n    };\n    this.rows = 10;\n\n    this.itemTemplate = this.itemTemplate.bind(this);\n    this.onPage = this.onPage.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.fetchData(1);\n    }, 1000);\n  }\n  componentDidUpdate(prevProps) {\n \n    if (\n      prevProps.title !== this.props.title ||\n      prevProps.year !== this.props.year ||\n      prevProps.searchType !== this.props.searchType\n    ) {\n   \n      setTimeout(() => {\n        this.fetchData(1);\n      }, 1000);\n    }\n  }\n  fetchData = (pageNumber) => {\n    return fetch(\n      `http://www.omdbapi.com/?s=${this.props.title}&apikey=7de47267&page=${pageNumber}&y=${this.props.year}&type=${\"movie\"}`\n    )\n      .then((resp) => resp)\n      .then((resp) => resp.json())\n      .then((response) => {\n     \n        if (response.totalRecords < 10) this.rows = response.totalRecordes;\n        else this.rows = 10;\n        this.datasource = response.Search;\n        this.setState({\n          totalRecords: Number(response.totalResults),\n          products: this.datasource,\n          loading: false,\n        });\n      });\n  };\n\n  // codes related to open film details\n  openDetails = (filmId) => {\n\n    this.setState({\n      itemDetailsIsOpen: true,\n      selectedFilmId: filmId,\n    });\n  };\n  close_details = () => {\n    this.setState({\n      itemDetailsIsOpen: false,\n    });\n  };\n  ///pagination controls\n  onPage(event) {\n    this.setState({\n      first: event.first,\n    });\n    // fetch data need page number to calculate we get index of first element in page\n    // divided be number of elemnt in each page add one because it starts from 0\n\n    this.fetchData(event.first / this.rows + 1);\n  }\n  \n// render as grid\n  itemTemplate(product, layout) {\n    if (!product) {\n      return \"\";\n    }\n    return (\n      <>\n          <MovieBox data={product} openDetails={this.openDetails} />\n      </>\n    );\n  }\n\n  renderHeader() {\n\n  \n  }\n\n  render() {\n    const header = this.renderHeader();\n\n    return (\n      <>\n        <div className=\"dataview-demo\" >\n          <div className=\"card\" style = {{backgroundColor:\"#001a33\"}} >\n            <DataView \n              value={this.state.products}\n              layout={this.state.layout}\n              header={header}\n              itemTemplate={this.itemTemplate}\n              lazy\n              paginator\n              paginatorPosition={\"bottom\"}\n              rows={this.rows}\n              totalRecords={this.state.totalRecords}\n              first={this.state.first}\n              onPage={this.onPage}\n              loading={this.state.loading}\n            />\n          </div>\n        </div>\n\n        <ItemDetails\n          close_details={this.close_details}\n          itemDetailsIsOpen={this.state.itemDetailsIsOpen}\n          selectedFilmId={this.state.selectedFilmId}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}