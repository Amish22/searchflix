{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amish\\\\OneDrive\\\\Desktop\\\\myMovieApp\\\\src\\\\Components\\\\TypesDropdown.js\";\nimport React, { Component } from \"react\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { connect } from \"react-redux\";\nimport { storeData } from \"../redux\";\nconst types = [{\n  label: \"All\",\n  value: null\n}, {\n  label: \"Movie\",\n  value: \"movie\"\n}, {\n  label: \"Series\",\n  value: \"series\"\n}, {\n  label: \"Episode\",\n  value: \"episode\"\n}, {\n  label: \"Game\",\n  value: \"game\"\n}];\n\nclass TypesDropdown extends Component {\n  constructor(storeData) {\n    super();\n\n    this.componentDidMount = () => {\n      this.setState({\n        type: this.props.searchType,\n        ismounted: true\n      });\n    };\n\n    this.state = {\n      ismounted: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, this.state.ismounted ? /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.type,\n      options: types,\n      onChange: e => {\n        this.props.storeData({\n          varName: \"searchType\",\n          data: e.value\n        });\n        this.setState({\n          type: e.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchType: state.filmStore.searchType\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeData: data => dispatch(storeData(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypesDropdown);","map":{"version":3,"sources":["C:/Users/amish/OneDrive/Desktop/myMovieApp/src/Components/TypesDropdown.js"],"names":["React","Component","Dropdown","connect","storeData","types","label","value","TypesDropdown","constructor","componentDidMount","setState","type","props","searchType","ismounted","state","render","e","varName","data","mapStateToProps","filmStore","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CADY,EAEZ;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAFY,EAGZ;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHY,EAIZ;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAJY,EAKZ;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CALY,CAAd;;AAQA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AACpCQ,EAAAA,WAAW,CAACL,SAAD,EAAY;AACrB;;AADqB,SAMvBM,iBANuB,GAMH,MAAM;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,UADL;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAXsB;;AAErB,SAAKC,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAODE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWD,SAAX,gBACC,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWJ,IADpB;AAEE,MAAA,OAAO,EAAEP,KAFX;AAGE,MAAA,QAAQ,EAAGa,CAAD,IAAO;AACf,aAAKL,KAAL,CAAWT,SAAX,CAAqB;AAACe,UAAAA,OAAO,EAAC,YAAT;AAAuBC,UAAAA,IAAI,EAAEF,CAAC,CAACX;AAA/B,SAArB;AACA,aAAKI,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEM,CAAC,CAACX;AAAV,SAAd;AAED,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAWC,EAZJ,CADF;AAiBD;;AA/BmC;;AAiCtC,MAAMc,eAAe,GAAIL,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,UAAU,EAAEE,KAAK,CAACM,SAAN,CAAgBR;AADvB,GAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpB,IAAAA,SAAS,EAAGgB,IAAD,IAAUI,QAAQ,CAACpB,SAAS,CAACgB,IAAD,CAAV;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAejB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { connect } from \"react-redux\";\nimport { storeData } from \"../redux\";\nconst types = [\n  { label: \"All\", value: null },\n  { label: \"Movie\", value: \"movie\" },\n  { label: \"Series\", value: \"series\" },\n  { label: \"Episode\", value: \"episode\" },\n  { label: \"Game\", value: \"game\" },\n  \n];\nclass TypesDropdown extends Component {\n  constructor(storeData) {\n    super();\n    this.state = {\n      ismounted: false,\n    };\n  }\n  componentDidMount = () => {\n    this.setState({\n      type: this.props.searchType,\n      ismounted: true,\n    });\n  };\n  render() {\n    return (\n      <div>\n        {this.state.ismounted ? (\n          <Dropdown\n            value={this.state.type}\n            options={types}\n            onChange={(e) => {\n              this.props.storeData({varName:\"searchType\" ,data: e.value });\n              this.setState({ type: e.value });\n             \n            }}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    searchType: state.filmStore.searchType,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    storeData: (data) => dispatch(storeData(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypesDropdown);\n"]},"metadata":{},"sourceType":"module"}