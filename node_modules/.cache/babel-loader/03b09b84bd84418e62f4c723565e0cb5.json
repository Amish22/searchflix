{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amish\\\\OneDrive\\\\Desktop\\\\myMovieApp\\\\src\\\\Components\\\\FilmsGridWrapper.js\";\nimport React, { Component } from \"react\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { connect } from \"react-redux\";\nimport { storeData } from \"../redux\";\nimport FilmsGrid from './FilmsGrid';\n\nclass FilmsGridWrapper extends Component {\n  constructor(storeData) {\n    super();\n\n    this.componentDidMount = () => {\n      this.setState({\n        ismounted: true\n      });\n    };\n\n    this.state = {\n      ismounted: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, this.state.ismounted ? /*#__PURE__*/React.createElement(FilmsGrid, {\n      year: this.props.year,\n      title: this.props.title,\n      searchType: this.props.searchType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }) : \"\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    year: state.filmStore.year,\n    title: state.filmStore.title,\n    searchType: state.filmStore.searchType\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeData: data => dispatch(storeData(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmsGridWrapper);","map":{"version":3,"sources":["C:/Users/amish/OneDrive/Desktop/myMovieApp/src/Components/FilmsGridWrapper.js"],"names":["React","Component","InputNumber","connect","storeData","FilmsGrid","FilmsGridWrapper","constructor","componentDidMount","setState","ismounted","state","render","props","year","title","searchType","mapStateToProps","filmStore","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,gBAAN,SAA+BL,SAA/B,CAAyC;AACrCM,EAAAA,WAAW,CAACH,SAAD,EAAY;AACnB;;AADmB,SAMrBI,iBANqB,GAMD,MAAM;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAVoB;;AAEnB,SAAKC,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAMHE,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWD,SAAX,gBACD,oBAAC,SAAD;AACA,MAAA,IAAI,EAAG,KAAKG,KAAL,CAAWC,IADlB;AAEA,MAAA,KAAK,EAAG,KAAKD,KAAL,CAAWE,KAFnB;AAGA,MAAA,UAAU,EAAG,KAAKF,KAAL,CAAWG,UAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAME,EAPP,CADJ;AAWH;;AAzBoC;;AA2BzC,MAAMC,eAAe,GAAIN,KAAD,IAAW;AACjC,SAAO;AACLG,IAAAA,IAAI,EAAEH,KAAK,CAACO,SAAN,CAAgBJ,IADjB;AAELC,IAAAA,KAAK,EAACJ,KAAK,CAACO,SAAN,CAAgBH,KAFjB;AAGLC,IAAAA,UAAU,EAACL,KAAK,CAACO,SAAN,CAAgBF;AAHtB,GAAP;AAKD,CAND;;AAQA,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLhB,IAAAA,SAAS,EAAGiB,IAAD,IAAUD,QAAQ,CAAChB,SAAS,CAACiB,IAAD,CAAV;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,gBAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { connect } from \"react-redux\";\nimport { storeData } from \"../redux\";\nimport FilmsGrid from './FilmsGrid'\nclass FilmsGridWrapper extends Component {\n    constructor(storeData) {\n        super();\n        this.state = {\n          ismounted: false,\n        };\n      }\n      componentDidMount = () => {\n        this.setState({\n          ismounted: true,\n        });\n      };\n    render() {\n       \n        return (\n            <div>\n                {this.state.ismounted?\n                <FilmsGrid  \n                year= {this.props.year}\n                title= {this.props.title}\n                searchType= {this.props.searchType}\n                \n                />:\"\"}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n  return {\n    year: state.filmStore.year,\n    title:state.filmStore.title,\n    searchType:state.filmStore.searchType\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    storeData: (data) => dispatch(storeData(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmsGridWrapper);\n"]},"metadata":{},"sourceType":"module"}