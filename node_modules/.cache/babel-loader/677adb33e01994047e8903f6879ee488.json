{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amish\\\\OneDrive\\\\Desktop\\\\searchflix\\\\src\\\\Components\\\\MoviesWrapper.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { storeData } from \"../redux\";\nimport Movies from './Movies';\n\nclass MoviesWrapper extends Component {\n  constructor(storeData) {\n    super();\n\n    this.componentDidMount = () => {\n      this.setState({\n        ismounted: true\n      });\n    };\n\n    this.state = {\n      ismounted: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#001a33\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, this.state.ismounted ? /*#__PURE__*/React.createElement(Movies, {\n      year: this.props.year,\n      title: this.props.title,\n      searchType: this.props.searchType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }) : \"\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    year: state.filmStore.year,\n    title: state.filmStore.title,\n    searchType: state.filmStore.searchType\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeData: data => dispatch(storeData(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesWrapper);","map":{"version":3,"sources":["C:/Users/amish/OneDrive/Desktop/searchflix/src/Components/MoviesWrapper.js"],"names":["React","Component","connect","storeData","Movies","MoviesWrapper","constructor","componentDidMount","setState","ismounted","state","render","backgroundColor","props","year","title","searchType","mapStateToProps","filmStore","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAClCK,EAAAA,WAAW,CAACH,SAAD,EAAY;AACnB;;AADmB,SAMrBI,iBANqB,GAMD,MAAM;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAVoB;;AAEnB,SAAKC,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAMHE,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,KAAK,EAAI;AAACC,QAAAA,eAAe,EAAC;AAAjB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWD,SAAX,gBACD,oBAAC,MAAD;AACA,MAAA,IAAI,EAAG,KAAKI,KAAL,CAAWC,IADlB;AAEA,MAAA,KAAK,EAAG,KAAKD,KAAL,CAAWE,KAFnB;AAGA,MAAA,UAAU,EAAG,KAAKF,KAAL,CAAWG,UAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAME,EAPP,CADJ;AAWH;;AAzBiC;;AA2BtC,MAAMC,eAAe,GAAIP,KAAD,IAAW;AACjC,SAAO;AACLI,IAAAA,IAAI,EAAEJ,KAAK,CAACQ,SAAN,CAAgBJ,IADjB;AAELC,IAAAA,KAAK,EAACL,KAAK,CAACQ,SAAN,CAAgBH,KAFjB;AAGLC,IAAAA,UAAU,EAACN,KAAK,CAACQ,SAAN,CAAgBF;AAHtB,GAAP;AAKD,CAND;;AAQA,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,SAAS,EAAGkB,IAAD,IAAUD,QAAQ,CAACjB,SAAS,CAACkB,IAAD,CAAV;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAenB,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,aAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { storeData } from \"../redux\";\nimport Movies from './Movies'\nclass MoviesWrapper extends Component {\n    constructor(storeData) {\n        super();\n        this.state = {\n          ismounted: false,\n        };\n      }\n      componentDidMount = () => {\n        this.setState({\n          ismounted: true,\n        });\n      };\n    render() {\n       \n        return (\n            <div style = {{backgroundColor:\"#001a33\"}} >\n                {this.state.ismounted?\n                <Movies  \n                year= {this.props.year}\n                title= {this.props.title}\n                searchType= {this.props.searchType}\n                \n                />:\"\"}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n  return {\n    year: state.filmStore.year,\n    title:state.filmStore.title,\n    searchType:state.filmStore.searchType\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    storeData: (data) => dispatch(storeData(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesWrapper);\n"]},"metadata":{},"sourceType":"module"}